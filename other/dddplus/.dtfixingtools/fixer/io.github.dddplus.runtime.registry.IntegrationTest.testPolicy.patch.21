STATUS: INLINE SUCCESSFUL
MODIFIED: io.github.dddplus.runtime.registry.IntegrationTest.testPolicy
MODIFIED FILE: /home/lichengpeng/test/final/automated_script/funkygao/cp-ddd-framework/dddplus-test/src/test/java/io/github/dddplus/runtime/registry/IntegrationTest.java
CLEANER: io.github.dddplus.runtime.registry.IntegrationTest.stepsRevisionDeadLoop
CLEANER FILE: /home/lichengpeng/test/final/automated_script/funkygao/cp-ddd-framework/dddplus-test/src/test/java/io/github/dddplus/runtime/registry/IntegrationTest.java
POLLUTER: io.github.dddplus.runtime.registry.BadOnPurposeTest.emptyActivityStep
POLLUTER FILE: /home/lichengpeng/test/final/automated_script/funkygao/cp-ddd-framework/dddplus-test/src/test/java/io/github/dddplus/runtime/registry/BadOnPurposeTest.java
ORIGINAL CLEANER SIZE: 8
NEW CLEANER SIZE: 4
ELAPSED TIME: 1644.7469999790192
==========================
@@ -204,0 +204,12 @@
+ {
+     fooModel.setB2c(false);
+     // dead loop on purpose
+     fooModel.setRedecideDeadLoop(true);
+     List<String> steps = DDD.findAbility(DecideStepsAbility.class).decideSteps(fooModel, Steps.Submit.Activity);
+     // B2BDecideStepsExt: FooStep -> BarStep(if redecideDeadLoop then add BarStep)
+     try {
+         submitStepsExec.execute(Steps.Submit.Activity, steps, fooModel);
+     } catch (RuntimeException expected) {
+         assertEquals("Seems steps dead loop, abort after 100", expected.getMessage());
+     }
+ }
